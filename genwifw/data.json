{
    "project": {
        "name": "genwi-template-framework",
        "description": "GENWI Javascript template framework.",
        "version": "0.1.0",
        "url": "https://github.com/genwi/template-framework"
    },
    "files": {
        "src/Helpers.js": {
            "name": "src/Helpers.js",
            "modules": {},
            "classes": {
                "Genwi.Helpers": 1
            },
            "fors": {},
            "namespaces": {
                "Genwi": 1
            }
        },
        "src/Templates.js": {
            "name": "src/Templates.js",
            "modules": {},
            "classes": {
                "Genwi.Genwi": 1,
                "Genwi.Template.AbstractView": 1,
                "Genwi.Template.Article": 1,
                "Genwi.Template.Articles": 1,
                "Genwi.Template.Sections": 1,
                "Genwi.Template.Toolbar": 1,
                "Genwi.Template.Favorites": 1,
                "Genwi.Template.Search": 1,
                "Genwi.Template.Categories": 1
            },
            "fors": {},
            "namespaces": {
                "Genwi": 1,
                "Genwi.Template": 1
            }
        },
        "src/Utils.js": {
            "name": "src/Utils.js",
            "modules": {},
            "classes": {
                "Genwi.Utils": 1
            },
            "fors": {},
            "namespaces": {
                "Genwi": 1
            }
        }
    },
    "modules": {},
    "classes": {
        "Genwi.Helpers": {
            "name": "Genwi.Helpers",
            "shortname": "Genwi.Helpers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Genwi",
            "file": "src/Helpers.js",
            "line": 3,
            "description": "This is the helpers class object containing all the handlebars helper.\nTo register a specific set of helpers use the following statement.\n\nGenwi.Helpers.initialise([\"helper1_name\",\"helper2_name\",..,])\n\nor do it individually: Genwi.Helpers.subset();",
            "static": 1,
            "type": "{Object}"
        },
        "Genwi.Genwi": {
            "name": "Genwi.Genwi",
            "shortname": "Genwi",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Genwi",
            "file": "src/Templates.js",
            "line": 1,
            "description": "The root class for the framework. Apart from serving as the root namespace;\nit has global methods which serve template specific configuration plus utility."
        },
        "Genwi.Template.AbstractView": {
            "name": "Genwi.Template.AbstractView",
            "shortname": "Genwi.Template.AbstractView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Genwi.Template",
            "file": "src/Templates.js",
            "line": 106,
            "description": "This is the base class for any page view. It should be treated as an abstract class and\nnever actually instantiated. To extend this class, do this:\n`new Genwi.Template.AbstractView.extend();`\n\nYou can also pass attributes directly to the extend function that become part\nof your new instance's prototype.\n\n`new Genwi.Template.AbstractView.extend({\n\tonSomeCallback: function(){ },\n\tmy: 'props'\n});`",
            "is_constructor": 1
        },
        "Genwi.Template.Article": {
            "name": "Genwi.Template.Article",
            "shortname": "Genwi.Template.Article",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Genwi.Template",
            "file": "src/Templates.js",
            "line": 447,
            "description": "This is the template for the Article page and extends from AbstractView.\nAny further specific implmentations should ideally extend this template.",
            "extends": "Genwi.Template.AbstractView"
        },
        "Genwi.Template.Articles": {
            "name": "Genwi.Template.Articles",
            "shortname": "Genwi.Template.Articles",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Genwi.Template",
            "file": "src/Templates.js",
            "line": 462,
            "description": "This is the template for the Articles page and extends from AbstractView.\nAny further specific implmentations should ideally extend this template.",
            "extends": "Genwi.Template.AbstractView"
        },
        "Genwi.Template.Sections": {
            "name": "Genwi.Template.Sections",
            "shortname": "Genwi.Template.Sections",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Genwi.Template",
            "file": "src/Templates.js",
            "line": 475,
            "description": "This is the template for the sections page and extends from AbstractView.\nAny further specific implmentations should ideally extend this template.",
            "extends": "Genwi.Template.AbstractView"
        },
        "Genwi.Template.Toolbar": {
            "name": "Genwi.Template.Toolbar",
            "shortname": "Genwi.Template.Toolbar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Genwi.Template",
            "file": "src/Templates.js",
            "line": 487,
            "description": "This is the template for the toolbar page and extends from AbstractView.\nAny further specific implmentations should ideally extend this template.",
            "extends": "Genwi.Template.AbstractView"
        },
        "Genwi.Template.Favorites": {
            "name": "Genwi.Template.Favorites",
            "shortname": "Genwi.Template.Favorites",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Genwi.Template",
            "file": "src/Templates.js",
            "line": 511,
            "description": "This is the template for the favorites page and extends from AbstractView.\nAny further specific implmentations should ideally extend this template.",
            "extends": "Genwi.Template.AbstractView"
        },
        "Genwi.Template.Search": {
            "name": "Genwi.Template.Search",
            "shortname": "Genwi.Template.Search",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Genwi.Template",
            "file": "src/Templates.js",
            "line": 525,
            "description": "This is the template for the search page and extends from AbstractView..\nAny further specific implmentations should ideally extend this template.",
            "extends": "Genwi.Template.AbstractView"
        },
        "Genwi.Template.Categories": {
            "name": "Genwi.Template.Categories",
            "shortname": "Genwi.Template.Categories",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Genwi.Template",
            "file": "src/Templates.js",
            "line": 537,
            "description": "This is the template for the categories page and extends from AbstractView..\nAny further specific implmentations should ideally extend this template.",
            "extends": "Genwi.Template.AbstractView"
        },
        "Genwi.Utils": {
            "name": "Genwi.Utils",
            "shortname": "Genwi.Utils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "Genwi",
            "file": "src/Utils.js",
            "line": 3,
            "description": "This class contains plain old school utility functions.\n\nUsage is pretty simple.E.g. Genwi.Utils.getDateStr();",
            "type": "{Object}"
        }
    },
    "classitems": [
        {
            "file": "src/Helpers.js",
            "line": 16,
            "description": "Helper function to return the lowercase value for a string.",
            "itemtype": "method",
            "name": "lowercase",
            "return": {
                "description": "the lowercase value of the value.",
                "type": "[string]"
            },
            "class": "Genwi.Helpers",
            "namespace": "Genwi"
        },
        {
            "file": "src/Helpers.js",
            "line": 28,
            "description": "Helper function to return the lowercase value for a variable.",
            "itemtype": "method",
            "name": "uppercase",
            "return": {
                "description": "the uppercase string.",
                "type": "[string]"
            },
            "class": "Genwi.Helpers",
            "namespace": "Genwi"
        },
        {
            "file": "src/Helpers.js",
            "line": 39,
            "description": "This is a simple helper to get the substring for a string.\nWorks similar to javascript string function.",
            "itemtype": "method",
            "name": "substring",
            "return": {
                "description": "[The result of substring operation.]",
                "type": "[string]"
            },
            "class": "Genwi.Helpers",
            "namespace": "Genwi"
        },
        {
            "file": "src/Helpers.js",
            "line": 51,
            "description": "Return the different fields of time that can be arranged to get date in any format.\nUse following fields to map different parts of the date.\ndate - The present date in number. e.g 29\nday - Day in words e.g monday\nmonth_num - The month in number. e.g 11\nmonth -  Month in words e.g January\nyear - Year in number. e.g 2011\nhour - Hours in 12 hr format.\nmin - Minutes.\nsec - Seconds.\nclock - AM/PM.\nsup, - st/nd/th/rd to represent the date. e.g 1st.",
            "itemtype": "method",
            "name": "datefields",
            "class": "Genwi.Helpers",
            "namespace": "Genwi"
        },
        {
            "file": "src/Helpers.js",
            "line": 119,
            "description": "This is a simple helper to split a string using a seperator\nand then apply the array to the template.",
            "itemtype": "method",
            "name": "split",
            "return": {
                "description": "The compiled html.",
                "type": "Htmlstring"
            },
            "class": "Genwi.Helpers",
            "namespace": "Genwi"
        },
        {
            "file": "src/Helpers.js",
            "line": 138,
            "description": "Strips a text from its html formatting. Uses the jquery function to do so.\nWe also wrap the text here to allow some simple string be in the argument.",
            "itemtype": "method",
            "name": "rawtext",
            "return": {
                "description": "The raw string without any html tags.",
                "type": "[htmltext]"
            },
            "class": "Genwi.Helpers",
            "namespace": "Genwi"
        },
        {
            "file": "src/Helpers.js",
            "line": 150,
            "description": "This is a helper function to iterate over a an array for a particular subset.",
            "params": [
                {
                    "name": "The",
                    "description": "array object",
                    "type": "[object]"
                },
                {
                    "name": "The",
                    "description": "start position",
                    "type": "[number]"
                },
                {
                    "name": "the",
                    "description": "number by which the length should be shortened to",
                    "type": "[number]"
                },
                {
                    "name": "The",
                    "description": "context which has the template to apply",
                    "type": "[object]"
                }
            ],
            "return": {
                "description": "",
                "type": "[htmltext]"
            },
            "class": "Genwi.Helpers",
            "namespace": "Genwi"
        },
        {
            "file": "src/Helpers.js",
            "line": 176,
            "description": "This helper compares two value depending on the operator type passed.\nIf the result is true applies the template inside compare otherwise applies the else part.",
            "itemtype": "method",
            "name": "compare",
            "params": [
                {
                    "name": "The",
                    "description": "left value to compare.",
                    "type": "Object"
                },
                {
                    "name": "The",
                    "description": "right hand side value to compare.",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "The operator type - eq or neq.",
                    "type": "String"
                }
            ],
            "class": "Genwi.Helpers",
            "namespace": "Genwi"
        },
        {
            "file": "src/Helpers.js",
            "line": 198,
            "description": "Initialises the helper using the list of helpers passed.\nPass an empty array or no argument if you want all the helpers to be registered.",
            "itemtype": "method",
            "name": "initialise",
            "params": [
                {
                    "name": "helpers-",
                    "description": "Comma seperated list of the name of the helpers.",
                    "type": "[array]"
                }
            ],
            "class": "Genwi.Helpers",
            "namespace": "Genwi"
        },
        {
            "file": "src/Templates.js",
            "line": 9,
            "class": "Genwi.Genwi",
            "namespace": "Genwi"
        },
        {
            "file": "src/Templates.js",
            "line": 10,
            "description": "A global constants object to define any constants.\nAny constants should not be directly hardcoded as per requirements but defined\nhere first so that we have maintainable code.",
            "type": "{Object}",
            "class": "Genwi.Genwi",
            "namespace": "Genwi"
        },
        {
            "file": "src/Templates.js",
            "line": 26,
            "description": "Use this function to register your html template with the javascript prototype.",
            "itemtype": "method",
            "name": "registerTemplate",
            "params": [
                {
                    "name": "templateName",
                    "description": "[The name of the html template.]",
                    "type": "String"
                },
                {
                    "name": "jsPrototype",
                    "description": "[The name of the prototype]",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Optional object passed from html which will be available to the prototype.",
                    "type": "Object"
                }
            ],
            "class": "Genwi.Genwi",
            "namespace": "Genwi"
        },
        {
            "file": "src/Templates.js",
            "line": 41,
            "description": "Logger function; any log messages printed for framework should call this.\nWill log messages with a timestamp.",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "msg",
                    "description": "The actual message to display.",
                    "type": "String"
                },
                {
                    "name": "errtype",
                    "description": "warn,info,error,log(default)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "[type]"
            },
            "class": "Genwi.Genwi",
            "namespace": "Genwi"
        },
        {
            "file": "src/Templates.js",
            "line": 55,
            "class": "Genwi.Genwi",
            "namespace": "Genwi"
        },
        {
            "file": "src/Templates.js",
            "line": 57,
            "description": "This whole thing is essentially a very stripped down Backbone.js, since our Router and\nto a large extent Model are already taken care of by native. All it does is take Backbone's \nsubclassing and adds in an abstract class that can be used to build better templates.",
            "class": "Genwi.Genwi",
            "namespace": "Genwi"
        },
        {
            "file": "src/Templates.js",
            "line": 132,
            "description": "The name of the html template to which this prototype's object will be binded to.\nSee Genwi.Template.registerTemplate",
            "itemtype": "property",
            "name": "templateName",
            "type": "{string}",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 140,
            "description": "Optional options object which will be initialised if passed from html template.\nSee Genwi.Template.registerTemplate",
            "itemtype": "property",
            "name": "options",
            "type": "{Object}",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 148,
            "description": "This represent the data that would be binded to the corresponding html template.",
            "type": "{Object}",
            "itemtype": "property",
            "name": "model",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 155,
            "description": "Contains info about the device.\nDetailed list includes\nisIOS, isAndroid, isIpad, isIphone, isApp, isNativeApp,\nisAndroidSmartphone,isAndroidTablet.",
            "type": "{Object}",
            "itemtype": "property",
            "name": "device",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 165,
            "description": "CSS selector for this view's template",
            "itemtype": "property",
            "name": "rootTemplateId",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 171,
            "description": "CSS selector for this view's root container",
            "itemtype": "property",
            "name": "el",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 176,
            "description": "Cached jQuery selector for this view's root container",
            "itemtype": "property",
            "name": "elOb",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 184,
            "description": "This function is called by native at various stages of a running app.",
            "params": [
                {
                    "name": "response",
                    "description": "The data passed from native.",
                    "type": "String/json string"
                }
            ],
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 202,
            "description": "Wrapper function for onAppUpdate.\nBinds the different system updates with intuitive values.",
            "params": [
                {
                    "name": "resp",
                    "description": "The response from the native specifying different type of updates happened.",
                    "type": "Object"
                }
            ],
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 219,
            "description": "Sets the variable to identify the running environment.",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 238,
            "description": "This checks and sets up the dom layout according to how the framework works.\nMissing root elements, configuring html5 context and setting up default native scroll falls under this function presently.",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 278,
            "description": "This function tells the native that client has finished loading after which\nthe native platform actually shows the page to the user.",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 293,
            "description": "This is the starting point for client rendering.\nWraps a sequence of calls which perform the exact logical functions.\nOverride this only in the case of very specialised requirement which is\nnot solved by overriding other functions.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "context",
                    "description": "The DOM element under which the template layout will resides.",
                    "type": "[object]"
                }
            ],
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 311,
            "description": "This is called to get the current page context as required by toolbar.",
            "return": {
                "description": "json string denoting the data."
            },
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 324,
            "description": "Binds the orientation change event to the app.",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 357,
            "description": "Prepares the data which will be binded to the template as defined in the html file.\nOverride this if the data available through this default implementation does not cater to your needs.",
            "itemtype": "method",
            "name": "buildModel",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 376,
            "description": "Any miscellaneous task before actually drawing the page should be carried out here.\nA common use case is creating some DOM element dynamically.",
            "itemtype": "method",
            "name": "onDraw",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 383,
            "description": "Binds the data to the inline template in the html file.\nOverride this if data has to be binded in a custom way.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "inc",
                    "description": "True if the data has to be appended to the root DOM.\n                       Default is false.",
                    "type": "Booleab"
                }
            ],
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 394,
            "description": "Called when a page is loaded on the client device fresh from the server.\nAny post-load event or miscellaneous task should be carried out here.",
            "itemtype": "method",
            "name": "onPageLoaded",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 401,
            "description": "Called when the page is loaded from cache on the client.\nA common use case is when you click back button.",
            "itemtype": "method",
            "name": "onPageLoadedFromCache",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 408,
            "description": "Called when native sends some response to the client in return of some request made.\nA common use case is return of posts when client raises appsurl/fetch request.",
            "itemtype": "method",
            "name": "onResponseReceived",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 416,
            "description": "Implement this to pass any data to toolbar to change the context of toolbar accordingly.",
            "itemtype": "method",
            "name": "pageContext",
            "return": {
                "description": "object with all the data to be passed to be set as context."
            },
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 423,
            "description": "This function is called when the app is updated from background to foreground.\nImplement this function to decide when you want to update your app.\nThere are four types of updates that can happen\nand will be passed as an array - ['ads', 'category','content','design']",
            "itemtype": "method",
            "name": "onAppUpdate",
            "params": [
                {
                    "name": "updates",
                    "description": "- All updated passed as an array.",
                    "type": "Array"
                }
            ],
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 433,
            "description": "This is called when orientation is changed for the device.\nImplement this to handle any orientation change usecases.",
            "itemtype": "method",
            "name": "onOrientationChange",
            "class": "Genwi.Template.AbstractView",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Templates.js",
            "line": 498,
            "description": "This method is called on every article,articles,categories,favorite and search page.\nThe data passed from getcontext will be transferred here as json data which can be used to\nfor further toolbar modification.",
            "itemtype": "method",
            "name": "setContext",
            "params": [
                {
                    "name": "resp",
                    "description": "The data returned from getContext of the particular page.",
                    "type": "String/json"
                }
            ],
            "class": "Genwi.Template.Toolbar",
            "namespace": "Genwi.Template"
        },
        {
            "file": "src/Utils.js",
            "line": 13,
            "description": "Utility to get date in particular format.",
            "itemtype": "method",
            "name": "getDateStr",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "[date]"
                }
            ],
            "return": {
                "description": "date in form \"January 02 2012\"",
                "type": "[string]"
            },
            "class": "Genwi.Utils",
            "namespace": "Genwi"
        },
        {
            "file": "src/Utils.js",
            "line": 26,
            "description": "This utility is to load the images after the layout is done.\nImage tags or div tag(background image) should fullfill following requirement\n\n  1. data-src attribute set to url of the image\n\n  e.g Genwi.Utils.lazyLoad($(\".lazyElements\"));",
            "itemtype": "method",
            "name": "lazyLoad",
            "params": [
                {
                    "name": "lazyElements",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "Genwi.Utils",
            "namespace": "Genwi"
        },
        {
            "file": "src/Utils.js",
            "line": 76,
            "description": "Fills up a basic handlebar template.",
            "itemtype": "method",
            "name": "bindTmplData",
            "params": [
                {
                    "name": "templateId",
                    "description": "-  The Id of the handlebar template",
                    "type": "[string]"
                },
                {
                    "name": "context",
                    "description": "- The context to fill up the template.",
                    "type": "[string(json)]"
                },
                {
                    "name": "elementToAppend",
                    "description": "- The element where the final layout should be appended to.",
                    "type": "[string(jquery-selector)]"
                },
                {
                    "name": "append",
                    "description": "[Append original contents. True to append, false otherwise.]",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "Genwi.Utils",
            "namespace": "Genwi"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nThis is a helper function to iterate over a an array for a particular subset.",
            "line": " src/Helpers.js:150"
        },
        {
            "message": "Missing item type",
            "line": " src/Templates.js:9"
        },
        {
            "message": "Missing item type\nA global constants object to define any constants.\nAny constants should not be directly hardcoded as per requirements but defined\nhere first so that we have maintainable code.",
            "line": " src/Templates.js:10"
        },
        {
            "message": "Missing item type",
            "line": " src/Templates.js:55"
        },
        {
            "message": "Missing item type\nThis whole thing is essentially a very stripped down Backbone.js, since our Router and\nto a large extent Model are already taken care of by native. All it does is take Backbone's \nsubclassing and adds in an abstract class that can be used to build better templates.",
            "line": " src/Templates.js:57"
        },
        {
            "message": "Missing item type\nThis function is called by native at various stages of a running app.",
            "line": " src/Templates.js:184"
        },
        {
            "message": "Missing item type\nWrapper function for onAppUpdate.\nBinds the different system updates with intuitive values.",
            "line": " src/Templates.js:202"
        },
        {
            "message": "Missing item type\nSets the variable to identify the running environment.",
            "line": " src/Templates.js:219"
        },
        {
            "message": "Missing item type\nThis checks and sets up the dom layout according to how the framework works.\nMissing root elements, configuring html5 context and setting up default native scroll falls under this function presently.",
            "line": " src/Templates.js:238"
        },
        {
            "message": "Missing item type\nThis function tells the native that client has finished loading after which\nthe native platform actually shows the page to the user.",
            "line": " src/Templates.js:278"
        },
        {
            "message": "Missing item type\nThis is called to get the current page context as required by toolbar.",
            "line": " src/Templates.js:311"
        },
        {
            "message": "Missing item type\nBinds the orientation change event to the app.",
            "line": " src/Templates.js:324"
        }
    ]
}